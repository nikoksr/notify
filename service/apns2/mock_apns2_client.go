// Code generated by mockery v2.35.1. DO NOT EDIT.

package apns2

import (
	sideshowapns2 "github.com/sideshow/apns2"
	mock "github.com/stretchr/testify/mock"
)

// mockApns2Client is an autogenerated mock type for the apns2Client type
type mockApns2Client struct {
	mock.Mock
}

// Push provides a mock function with given fields: n
func (_m *mockApns2Client) Push(n *sideshowapns2.Notification) (*sideshowapns2.Response, error) {
	ret := _m.Called(n)

	var r0 *sideshowapns2.Response
	var r1 error
	if rf, ok := ret.Get(0).(func(*sideshowapns2.Notification) (*sideshowapns2.Response, error)); ok {
		return rf(n)
	}
	if rf, ok := ret.Get(0).(func(*sideshowapns2.Notification) *sideshowapns2.Response); ok {
		r0 = rf(n)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sideshowapns2.Response)
		}
	}

	if rf, ok := ret.Get(1).(func(*sideshowapns2.Notification) error); ok {
		r1 = rf(n)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// newMockApns2Client creates a new instance of mockApns2Client. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockApns2Client(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockApns2Client {
	mock := &mockApns2Client{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
