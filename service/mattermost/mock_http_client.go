// Code generated by mockery v2.16.0. DO NOT EDIT.

package mattermost

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	http "github.com/nikoksr/notify/service/http"
)

// mockHttpClient is an autogenerated mock type for the httpClient type
type mockHttpClient struct {
	mock.Mock
}

// AddReceivers provides a mock function with given fields: wh
func (_m *mockHttpClient) AddReceivers(wh ...*http.Webhook) {
	_va := make([]interface{}, len(wh))
	for _i := range wh {
		_va[_i] = wh[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

// PostSend provides a mock function with given fields: postfn
func (_m *mockHttpClient) PostSend(postfn http.PostSendHookFn) {
	_m.Called(postfn)
}

// PreSend provides a mock function with given fields: prefn
func (_m *mockHttpClient) PreSend(prefn http.PreSendHookFn) {
	_m.Called(prefn)
}

// Send provides a mock function with given fields: ctx, subject, message
func (_m *mockHttpClient) Send(ctx context.Context, subject string, message string) error {
	ret := _m.Called(ctx, subject, message)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, subject, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewMockHttpClient interface {
	mock.TestingT
	Cleanup(func())
}

// newMockHttpClient creates a new instance of mockHttpClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockHttpClient(t mockConstructorTestingTnewMockHttpClient) *mockHttpClient {
	mock := &mockHttpClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
