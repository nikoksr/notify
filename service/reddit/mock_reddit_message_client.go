// Code generated by mockery v2.15.0. DO NOT EDIT.

package reddit

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	v2reddit "github.com/vartanbeno/go-reddit/v2/reddit"
)

// mockRedditMessageClient is an autogenerated mock type for the redditMessageClient type
type mockRedditMessageClient struct {
	mock.Mock
}

// Send provides a mock function with given fields: _a0, _a1
func (_m *mockRedditMessageClient) Send(_a0 context.Context, _a1 *v2reddit.SendMessageRequest) (*v2reddit.Response, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *v2reddit.Response
	if rf, ok := ret.Get(0).(func(context.Context, *v2reddit.SendMessageRequest) *v2reddit.Response); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v2reddit.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *v2reddit.SendMessageRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMockRedditMessageClient interface {
	mock.TestingT
	Cleanup(func())
}

// newMockRedditMessageClient creates a new instance of mockRedditMessageClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockRedditMessageClient(t mockConstructorTestingTnewMockRedditMessageClient) *mockRedditMessageClient {
	mock := &mockRedditMessageClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
