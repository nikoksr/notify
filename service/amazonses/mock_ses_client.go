// Code generated by mockery v2.14.0. DO NOT EDIT.

package amazonses

import (
	context "context"

	ses "github.com/aws/aws-sdk-go-v2/service/ses"
	mock "github.com/stretchr/testify/mock"
)

// mockSesClient is an autogenerated mock type for the sesClient type
type mockSesClient struct {
	mock.Mock
}

// SendEmail provides a mock function with given fields: ctx, params, optFns
func (_m *mockSesClient) SendEmail(ctx context.Context, params *ses.SendEmailInput, optFns ...func(*ses.Options)) (*ses.SendEmailOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *ses.SendEmailOutput
	if rf, ok := ret.Get(0).(func(context.Context, *ses.SendEmailInput, ...func(*ses.Options)) *ses.SendEmailOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ses.SendEmailOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ses.SendEmailInput, ...func(*ses.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMockSesClient interface {
	mock.TestingT
	Cleanup(func())
}

// newMockSesClient creates a new instance of mockSesClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockSesClient(t mockConstructorTestingTnewMockSesClient) *mockSesClient {
	mock := &mockSesClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
