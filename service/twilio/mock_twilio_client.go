// Code generated by mockery v2.14.0. DO NOT EDIT.

package twilio

import (
	url "net/url"

	twilio_go "github.com/kevinburke/twilio-go"
	mock "github.com/stretchr/testify/mock"
)

// mockTwilioClient is an autogenerated mock type for the twilioClient type
type mockTwilioClient struct {
	mock.Mock
}

// SendMessage provides a mock function with given fields: from, to, body, mediaURLs
func (_m *mockTwilioClient) SendMessage(from string, to string, body string, mediaURLs []*url.URL) (*twilio_go.Message, error) {
	ret := _m.Called(from, to, body, mediaURLs)

	var r0 *twilio_go.Message
	if rf, ok := ret.Get(0).(func(string, string, string, []*url.URL) *twilio_go.Message); ok {
		r0 = rf(from, to, body, mediaURLs)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*twilio_go.Message)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, string, []*url.URL) error); ok {
		r1 = rf(from, to, body, mediaURLs)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMockTwilioClient interface {
	mock.TestingT
	Cleanup(func())
}

// newMockTwilioClient creates a new instance of mockTwilioClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockTwilioClient(t mockConstructorTestingTnewMockTwilioClient) *mockTwilioClient {
	mock := &mockTwilioClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
