// Code generated by mockery v2.14.0. DO NOT EDIT.

package amazonsns

import (
	context "context"

	sns "github.com/aws/aws-sdk-go-v2/service/sns"
	mock "github.com/stretchr/testify/mock"
)

// mockSnsSendMessageAPI is an autogenerated mock type for the snsSendMessageAPI type
type mockSnsSendMessageAPI struct {
	mock.Mock
}

// SendMessage provides a mock function with given fields: ctx, params, optFns
func (_m *mockSnsSendMessageAPI) SendMessage(ctx context.Context, params *sns.PublishInput, optFns ...func(*sns.Options)) (*sns.PublishOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *sns.PublishOutput
	if rf, ok := ret.Get(0).(func(context.Context, *sns.PublishInput, ...func(*sns.Options)) *sns.PublishOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sns.PublishOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *sns.PublishInput, ...func(*sns.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMockSnsSendMessageAPI interface {
	mock.TestingT
	Cleanup(func())
}

// newMockSnsSendMessageAPI creates a new instance of mockSnsSendMessageAPI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockSnsSendMessageAPI(t mockConstructorTestingTnewMockSnsSendMessageAPI) *mockSnsSendMessageAPI {
	mock := &mockSnsSendMessageAPI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
