// Code generated by mockery v2.15.0. DO NOT EDIT.

package pushover

import (
	gregdelpushover "github.com/gregdel/pushover"
	mock "github.com/stretchr/testify/mock"
)

// mockPushoverClient is an autogenerated mock type for the pushoverClient type
type mockPushoverClient struct {
	mock.Mock
}

// SendMessage provides a mock function with given fields: _a0, _a1
func (_m *mockPushoverClient) SendMessage(_a0 *gregdelpushover.Message, _a1 *gregdelpushover.Recipient) (*gregdelpushover.Response, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *gregdelpushover.Response
	if rf, ok := ret.Get(0).(func(*gregdelpushover.Message, *gregdelpushover.Recipient) *gregdelpushover.Response); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gregdelpushover.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*gregdelpushover.Message, *gregdelpushover.Recipient) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMockPushoverClient interface {
	mock.TestingT
	Cleanup(func())
}

// newMockPushoverClient creates a new instance of mockPushoverClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockPushoverClient(t mockConstructorTestingTnewMockPushoverClient) *mockPushoverClient {
	mock := &mockPushoverClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
